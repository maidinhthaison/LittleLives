// Generated by Dagger (https://dagger.dev).
package di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineDispatcher;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideCoroutineDispatcherFactory implements Factory<CoroutineDispatcher> {
  @Override
  public CoroutineDispatcher get() {
    return provideCoroutineDispatcher();
  }

  public static NetworkModule_ProvideCoroutineDispatcherFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineDispatcher provideCoroutineDispatcher() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideCoroutineDispatcher());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideCoroutineDispatcherFactory INSTANCE = new NetworkModule_ProvideCoroutineDispatcherFactory();
  }
}
