// Generated by Dagger (https://dagger.dev).
package data.local;

import androidx.datastore.core.DataStore;
import androidx.datastore.preferences.core.Preferences;
import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppLocalDataSource_Factory implements Factory<AppLocalDataSource> {
  private final Provider<DataStore<Preferences>> dataStoreProvider;

  private final Provider<CoroutineDispatcher> dispatcherProvider;

  private final Provider<Gson> gsonProvider;

  public AppLocalDataSource_Factory(Provider<DataStore<Preferences>> dataStoreProvider,
      Provider<CoroutineDispatcher> dispatcherProvider, Provider<Gson> gsonProvider) {
    this.dataStoreProvider = dataStoreProvider;
    this.dispatcherProvider = dispatcherProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public AppLocalDataSource get() {
    return newInstance(dataStoreProvider.get(), dispatcherProvider.get(), gsonProvider.get());
  }

  public static AppLocalDataSource_Factory create(
      Provider<DataStore<Preferences>> dataStoreProvider,
      Provider<CoroutineDispatcher> dispatcherProvider, Provider<Gson> gsonProvider) {
    return new AppLocalDataSource_Factory(dataStoreProvider, dispatcherProvider, gsonProvider);
  }

  public static AppLocalDataSource newInstance(DataStore<Preferences> dataStore,
      CoroutineDispatcher dispatcher, Gson gson) {
    return new AppLocalDataSource(dataStore, dispatcher, gson);
  }
}
